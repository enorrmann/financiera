// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.com.norrmann.financiera.web;

import ar.com.norrmann.financiera.model.Cliente;
import ar.com.norrmann.financiera.model.Zona;
import ar.com.norrmann.financiera.web.ClienteBean;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.component.html.HtmlPanelGrid;
import org.primefaces.event.CloseEvent;

privileged aspect ClienteBean_Roo_ManagedBean {
    
    declare @type: ClienteBean: @ManagedBean(name = "clienteBean");
    
    declare @type: ClienteBean: @SessionScoped;
    
    private String ClienteBean.name = "Clientes";
    
    private List<Cliente> ClienteBean.allClientes;
    
    private boolean ClienteBean.dataVisible = false;
    
    private List<String> ClienteBean.columns;
    
    private HtmlPanelGrid ClienteBean.createPanelGrid;
    
    private HtmlPanelGrid ClienteBean.editPanelGrid;
    
    private HtmlPanelGrid ClienteBean.viewPanelGrid;
    
    private boolean ClienteBean.createDialogVisible = false;
    
    @PostConstruct
    public void ClienteBean.init() {
        columns = new ArrayList<String>();
        columns.add("debe");
        columns.add("fechaCalculoMora");
        columns.add("apellidos");
        columns.add("nombres");
        columns.add("domicilio");
    }
    
    public String ClienteBean.getName() {
        return name;
    }
    
    public List<String> ClienteBean.getColumns() {
        return columns;
    }
    
    public List<Cliente> ClienteBean.getAllClientes() {
        return allClientes;
    }
    
    public void ClienteBean.setAllClientes(List<Cliente> allClientes) {
        this.allClientes = allClientes;
    }
    
    public String ClienteBean.findAllClientes() {
        allClientes = Cliente.findAllClientes();
        dataVisible = !allClientes.isEmpty();
        return null;
    }
    
    public boolean ClienteBean.isDataVisible() {
        return dataVisible;
    }
    
    public void ClienteBean.setDataVisible(boolean dataVisible) {
        this.dataVisible = dataVisible;
    }
    
    public HtmlPanelGrid ClienteBean.getCreatePanelGrid() {
        if (createPanelGrid == null) {
            createPanelGrid = populateCreatePanel();
        }
        return createPanelGrid;
    }
    
    public void ClienteBean.setCreatePanelGrid(HtmlPanelGrid createPanelGrid) {
        this.createPanelGrid = createPanelGrid;
    }
    
    public HtmlPanelGrid ClienteBean.getEditPanelGrid() {
        if (editPanelGrid == null) {
            editPanelGrid = populateEditPanel();
        }
        return editPanelGrid;
    }
    
    public void ClienteBean.setEditPanelGrid(HtmlPanelGrid editPanelGrid) {
        this.editPanelGrid = editPanelGrid;
    }
    
    public HtmlPanelGrid ClienteBean.getViewPanelGrid() {
        return populateViewPanel();
    }
    
    public void ClienteBean.setViewPanelGrid(HtmlPanelGrid viewPanelGrid) {
        this.viewPanelGrid = viewPanelGrid;
    }
    
    public List<Zona> ClienteBean.completeZona(String query) {
        List<Zona> suggestions = new ArrayList<Zona>();
        for (Zona zona : Zona.findAllZonas()) {
            String zonaStr = String.valueOf(zona.getZona() +  " "  + zona.getDescripcion());
            if (zonaStr.toLowerCase().startsWith(query.toLowerCase())) {
                suggestions.add(zona);
            }
        }
        return suggestions;
    }
    
    public String ClienteBean.onEdit() {
        return null;
    }
    
    public boolean ClienteBean.isCreateDialogVisible() {
        return createDialogVisible;
    }
    
    public void ClienteBean.setCreateDialogVisible(boolean createDialogVisible) {
        this.createDialogVisible = createDialogVisible;
    }
    
    public String ClienteBean.displayCreateDialog() {
        cliente = new Cliente();
        createDialogVisible = true;
        return "cliente";
    }
    
    public void ClienteBean.reset() {
        cliente = null;
        createDialogVisible = false;
    }
    
    public void ClienteBean.handleDialogClose(CloseEvent event) {
        reset();
    }
    
}
