// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.com.norrmann.financiera.web;

import ar.com.norrmann.financiera.model.InteresPunitorio;
import ar.com.norrmann.financiera.web.InteresPunitorioBean;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.faces.application.Application;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.component.html.HtmlOutputText;
import javax.faces.component.html.HtmlPanelGrid;
import javax.faces.context.FacesContext;
import javax.faces.validator.DoubleRangeValidator;
import org.primefaces.component.inputtext.InputText;
import org.primefaces.component.message.Message;
import org.primefaces.context.RequestContext;
import org.primefaces.event.CloseEvent;

privileged aspect InteresPunitorioBean_Roo_ManagedBean {
    
    declare @type: InteresPunitorioBean: @ManagedBean(name = "interesPunitorioBean");
    
    declare @type: InteresPunitorioBean: @SessionScoped;
    
    private String InteresPunitorioBean.name = "InteresPunitorios";
    
    private InteresPunitorio InteresPunitorioBean.interesPunitorio;
    
    private List<InteresPunitorio> InteresPunitorioBean.allInteresPunitorios;
    
    private boolean InteresPunitorioBean.dataVisible = false;
    
    private List<String> InteresPunitorioBean.columns;
    
    private HtmlPanelGrid InteresPunitorioBean.createPanelGrid;
    
    private HtmlPanelGrid InteresPunitorioBean.editPanelGrid;
    
    private HtmlPanelGrid InteresPunitorioBean.viewPanelGrid;
    
    private boolean InteresPunitorioBean.createDialogVisible = false;
    
    @PostConstruct
    public void InteresPunitorioBean.init() {
        columns = new ArrayList<String>();
        columns.add("interes");
        columns.add("descripcion");
    }
    
    public String InteresPunitorioBean.getName() {
        return name;
    }
    
    public List<String> InteresPunitorioBean.getColumns() {
        return columns;
    }
    
    public List<InteresPunitorio> InteresPunitorioBean.getAllInteresPunitorios() {
        return allInteresPunitorios;
    }
    
    public void InteresPunitorioBean.setAllInteresPunitorios(List<InteresPunitorio> allInteresPunitorios) {
        this.allInteresPunitorios = allInteresPunitorios;
    }
    
    public String InteresPunitorioBean.findAllInteresPunitorios() {
        allInteresPunitorios = InteresPunitorio.findAllInteresPunitorios();
        dataVisible = !allInteresPunitorios.isEmpty();
        return null;
    }
    
    public boolean InteresPunitorioBean.isDataVisible() {
        return dataVisible;
    }
    
    public void InteresPunitorioBean.setDataVisible(boolean dataVisible) {
        this.dataVisible = dataVisible;
    }
    
    public HtmlPanelGrid InteresPunitorioBean.getCreatePanelGrid() {
        if (createPanelGrid == null) {
            createPanelGrid = populateCreatePanel();
        }
        return createPanelGrid;
    }
    
    public void InteresPunitorioBean.setCreatePanelGrid(HtmlPanelGrid createPanelGrid) {
        this.createPanelGrid = createPanelGrid;
    }
    
    public HtmlPanelGrid InteresPunitorioBean.getEditPanelGrid() {
        if (editPanelGrid == null) {
            editPanelGrid = populateEditPanel();
        }
        return editPanelGrid;
    }
    
    public void InteresPunitorioBean.setEditPanelGrid(HtmlPanelGrid editPanelGrid) {
        this.editPanelGrid = editPanelGrid;
    }
    
    public HtmlPanelGrid InteresPunitorioBean.getViewPanelGrid() {
        return populateViewPanel();
    }
    
    public void InteresPunitorioBean.setViewPanelGrid(HtmlPanelGrid viewPanelGrid) {
        this.viewPanelGrid = viewPanelGrid;
    }
    
    public HtmlPanelGrid InteresPunitorioBean.populateCreatePanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
        HtmlOutputText interesCreateOutput = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        interesCreateOutput.setId("interesCreateOutput");
        interesCreateOutput.setValue("Interes: * ");
        htmlPanelGrid.getChildren().add(interesCreateOutput);
        
        InputText interesCreateInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        interesCreateInput.setId("interesCreateInput");
        interesCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{interesPunitorioBean.interesPunitorio.interes}", BigDecimal.class));
        interesCreateInput.setRequired(true);
        DoubleRangeValidator interesCreateInputValidator = new DoubleRangeValidator();
        interesCreateInputValidator.setMinimum(0.01);
        interesCreateInput.addValidator(interesCreateInputValidator);
        htmlPanelGrid.getChildren().add(interesCreateInput);
        
        Message interesCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        interesCreateInputMessage.setId("interesCreateInputMessage");
        interesCreateInputMessage.setFor("interesCreateInput");
        interesCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(interesCreateInputMessage);
        
        HtmlOutputText descripcionCreateOutput = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        descripcionCreateOutput.setId("descripcionCreateOutput");
        descripcionCreateOutput.setValue("Descripcion:   ");
        htmlPanelGrid.getChildren().add(descripcionCreateOutput);
        
        InputText descripcionCreateInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        descripcionCreateInput.setId("descripcionCreateInput");
        descripcionCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{interesPunitorioBean.interesPunitorio.descripcion}", String.class));
        htmlPanelGrid.getChildren().add(descripcionCreateInput);
        
        Message descripcionCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        descripcionCreateInputMessage.setId("descripcionCreateInputMessage");
        descripcionCreateInputMessage.setFor("descripcionCreateInput");
        descripcionCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(descripcionCreateInputMessage);
        
        return htmlPanelGrid;
    }
    
    public HtmlPanelGrid InteresPunitorioBean.populateEditPanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
        HtmlOutputText interesEditOutput = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        interesEditOutput.setId("interesEditOutput");
        interesEditOutput.setValue("Interes: * ");
        htmlPanelGrid.getChildren().add(interesEditOutput);
        
        InputText interesEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        interesEditInput.setId("interesEditInput");
        interesEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{interesPunitorioBean.interesPunitorio.interes}", BigDecimal.class));
        interesEditInput.setRequired(true);
        DoubleRangeValidator interesEditInputValidator = new DoubleRangeValidator();
        interesEditInputValidator.setMinimum(0.01);
        interesEditInput.addValidator(interesEditInputValidator);
        htmlPanelGrid.getChildren().add(interesEditInput);
        
        Message interesEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        interesEditInputMessage.setId("interesEditInputMessage");
        interesEditInputMessage.setFor("interesEditInput");
        interesEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(interesEditInputMessage);
        
        HtmlOutputText descripcionEditOutput = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        descripcionEditOutput.setId("descripcionEditOutput");
        descripcionEditOutput.setValue("Descripcion:   ");
        htmlPanelGrid.getChildren().add(descripcionEditOutput);
        
        InputText descripcionEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        descripcionEditInput.setId("descripcionEditInput");
        descripcionEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{interesPunitorioBean.interesPunitorio.descripcion}", String.class));
        htmlPanelGrid.getChildren().add(descripcionEditInput);
        
        Message descripcionEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        descripcionEditInputMessage.setId("descripcionEditInputMessage");
        descripcionEditInputMessage.setFor("descripcionEditInput");
        descripcionEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(descripcionEditInputMessage);
        
        return htmlPanelGrid;
    }
    
    public HtmlPanelGrid InteresPunitorioBean.populateViewPanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
        HtmlOutputText interesLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        interesLabel.setId("interesLabel");
        interesLabel.setValue("Interes:   ");
        htmlPanelGrid.getChildren().add(interesLabel);
        
        HtmlOutputText interesValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        interesValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{interesPunitorioBean.interesPunitorio.interes}", String.class));
        htmlPanelGrid.getChildren().add(interesValue);
        
        HtmlOutputText descripcionLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        descripcionLabel.setId("descripcionLabel");
        descripcionLabel.setValue("Descripcion:   ");
        htmlPanelGrid.getChildren().add(descripcionLabel);
        
        HtmlOutputText descripcionValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        descripcionValue.setId("descripcionValue");
        descripcionValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{interesPunitorioBean.interesPunitorio.descripcion}", String.class));
        htmlPanelGrid.getChildren().add(descripcionValue);
        
        return htmlPanelGrid;
    }
    
    public InteresPunitorio InteresPunitorioBean.getInteresPunitorio() {
        if (interesPunitorio == null) {
            interesPunitorio = new InteresPunitorio();
        }
        return interesPunitorio;
    }
    
    public void InteresPunitorioBean.setInteresPunitorio(InteresPunitorio interesPunitorio) {
        this.interesPunitorio = interesPunitorio;
    }
    
    public String InteresPunitorioBean.onEdit() {
        return null;
    }
    
    public boolean InteresPunitorioBean.isCreateDialogVisible() {
        return createDialogVisible;
    }
    
    public void InteresPunitorioBean.setCreateDialogVisible(boolean createDialogVisible) {
        this.createDialogVisible = createDialogVisible;
    }
    
    public String InteresPunitorioBean.displayList() {
        createDialogVisible = false;
        findAllInteresPunitorios();
        return "interesPunitorio";
    }
    
    public String InteresPunitorioBean.displayCreateDialog() {
        interesPunitorio = new InteresPunitorio();
        createDialogVisible = true;
        return "interesPunitorio";
    }
    
    public String InteresPunitorioBean.persist() {
        String message = "";
        if (interesPunitorio.getId() != null) {
            interesPunitorio.merge();
            message = "Successfully updated";
        } else {
            interesPunitorio.persist();
            message = "Successfully created";
        }
        RequestContext context = RequestContext.getCurrentInstance();
        context.execute("createDialog.hide()");
        context.execute("editDialog.hide()");
        
        FacesMessage facesMessage = new FacesMessage(message);
        FacesContext.getCurrentInstance().addMessage(null, facesMessage);
        reset();
        return findAllInteresPunitorios();
    }
    
    public String InteresPunitorioBean.delete() {
        interesPunitorio.remove();
        FacesMessage facesMessage = new FacesMessage("Successfully deleted");
        FacesContext.getCurrentInstance().addMessage(null, facesMessage);
        reset();
        return findAllInteresPunitorios();
    }
    
    public void InteresPunitorioBean.reset() {
        interesPunitorio = null;
        createDialogVisible = false;
    }
    
    public void InteresPunitorioBean.handleDialogClose(CloseEvent event) {
        reset();
    }
    
}
