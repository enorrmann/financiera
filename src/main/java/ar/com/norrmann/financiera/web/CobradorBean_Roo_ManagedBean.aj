// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.com.norrmann.financiera.web;

import ar.com.norrmann.financiera.model.Cobrador;
import ar.com.norrmann.financiera.model.Zona;
import ar.com.norrmann.financiera.web.CobradorBean;
import ar.com.norrmann.financiera.web.converter.ZonaConverter;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.faces.application.Application;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.component.html.HtmlOutputText;
import javax.faces.component.html.HtmlPanelGrid;
import javax.faces.context.FacesContext;
import org.primefaces.component.autocomplete.AutoComplete;
import org.primefaces.component.inputtext.InputText;
import org.primefaces.component.message.Message;
import org.primefaces.event.CloseEvent;

privileged aspect CobradorBean_Roo_ManagedBean {
    
    declare @type: CobradorBean: @ManagedBean(name = "cobradorBean");
    
    declare @type: CobradorBean: @SessionScoped;
    
    private List<Cobrador> CobradorBean.allCobradors;
    
    private boolean CobradorBean.dataVisible = false;
    
    private List<String> CobradorBean.columns;
    
    private HtmlPanelGrid CobradorBean.createPanelGrid;
    
    private HtmlPanelGrid CobradorBean.editPanelGrid;
    
    private HtmlPanelGrid CobradorBean.viewPanelGrid;
    
    private boolean CobradorBean.createDialogVisible = false;
    
    @PostConstruct
    public void CobradorBean.init() {
        columns = new ArrayList<String>();
        columns.add("apellidos");
        columns.add("nombres");
    }
    
    public List<String> CobradorBean.getColumns() {
        return columns;
    }
    
    public List<Cobrador> CobradorBean.getAllCobradors() {
        return allCobradors;
    }
    
    public void CobradorBean.setAllCobradors(List<Cobrador> allCobradors) {
        this.allCobradors = allCobradors;
    }
    
    public String CobradorBean.findAllCobradors() {
        allCobradors = Cobrador.findAllCobradors();
        dataVisible = !allCobradors.isEmpty();
        return null;
    }
    
    public boolean CobradorBean.isDataVisible() {
        return dataVisible;
    }
    
    public void CobradorBean.setDataVisible(boolean dataVisible) {
        this.dataVisible = dataVisible;
    }
    
    public HtmlPanelGrid CobradorBean.getCreatePanelGrid() {
        if (createPanelGrid == null) {
            createPanelGrid = populateCreatePanel();
        }
        return createPanelGrid;
    }
    
    public void CobradorBean.setCreatePanelGrid(HtmlPanelGrid createPanelGrid) {
        this.createPanelGrid = createPanelGrid;
    }
    
    public HtmlPanelGrid CobradorBean.getEditPanelGrid() {
        if (editPanelGrid == null) {
            editPanelGrid = populateEditPanel();
        }
        return editPanelGrid;
    }
    
    public void CobradorBean.setEditPanelGrid(HtmlPanelGrid editPanelGrid) {
        this.editPanelGrid = editPanelGrid;
    }
    
    public HtmlPanelGrid CobradorBean.getViewPanelGrid() {
        return populateViewPanel();
    }
    
    public void CobradorBean.setViewPanelGrid(HtmlPanelGrid viewPanelGrid) {
        this.viewPanelGrid = viewPanelGrid;
    }
    
    public HtmlPanelGrid CobradorBean.populateEditPanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
        HtmlOutputText apellidosEditOutput = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        apellidosEditOutput.setId("apellidosEditOutput");
        apellidosEditOutput.setValue("Apellidos: * ");
        htmlPanelGrid.getChildren().add(apellidosEditOutput);
        
        InputText apellidosEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        apellidosEditInput.setId("apellidosEditInput");
        apellidosEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{cobradorBean.cobrador.apellidos}", String.class));
        htmlPanelGrid.getChildren().add(apellidosEditInput);
        
        Message apellidosEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        apellidosEditInputMessage.setId("apellidosEditInputMessage");
        apellidosEditInputMessage.setFor("apellidosEditInput");
        apellidosEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(apellidosEditInputMessage);
        
        HtmlOutputText nombresEditOutput = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        nombresEditOutput.setId("nombresEditOutput");
        nombresEditOutput.setValue("Nombres: * ");
        htmlPanelGrid.getChildren().add(nombresEditOutput);
        
        InputText nombresEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        nombresEditInput.setId("nombresEditInput");
        nombresEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{cobradorBean.cobrador.nombres}", String.class));
        htmlPanelGrid.getChildren().add(nombresEditInput);
        
        Message nombresEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        nombresEditInputMessage.setId("nombresEditInputMessage");
        nombresEditInputMessage.setFor("nombresEditInput");
        nombresEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(nombresEditInputMessage);
        
        HtmlOutputText zonaEditOutput = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        zonaEditOutput.setId("zonaEditOutput");
        zonaEditOutput.setValue("Zona:   ");
        htmlPanelGrid.getChildren().add(zonaEditOutput);
        
        AutoComplete zonaEditInput = (AutoComplete) application.createComponent(AutoComplete.COMPONENT_TYPE);
        zonaEditInput.setId("zonaEditInput");
        zonaEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{cobradorBean.cobrador.zona}", Zona.class));
        zonaEditInput.setCompleteMethod(expressionFactory.createMethodExpression(elContext, "#{cobradorBean.completeZona}", List.class, new Class[] { String.class }));
        zonaEditInput.setDropdown(true);
        zonaEditInput.setValueExpression("var", expressionFactory.createValueExpression(elContext, "zona", String.class));
        zonaEditInput.setValueExpression("itemLabel", expressionFactory.createValueExpression(elContext, "#{zona.zona} #{zona.descripcion}", String.class));
        zonaEditInput.setValueExpression("itemValue", expressionFactory.createValueExpression(elContext, "#{zona}", Zona.class));
        zonaEditInput.setConverter(new ZonaConverter());
        zonaEditInput.setRequired(false);
        htmlPanelGrid.getChildren().add(zonaEditInput);
        
        Message zonaEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        zonaEditInputMessage.setId("zonaEditInputMessage");
        zonaEditInputMessage.setFor("zonaEditInput");
        zonaEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(zonaEditInputMessage);
        
        return htmlPanelGrid;
    }
    
    public HtmlPanelGrid CobradorBean.populateViewPanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
        HtmlOutputText apellidosLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        apellidosLabel.setId("apellidosLabel");
        apellidosLabel.setValue("Apellidos:   ");
        htmlPanelGrid.getChildren().add(apellidosLabel);
        
        HtmlOutputText apellidosValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        apellidosValue.setId("apellidosValue");
        apellidosValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{cobradorBean.cobrador.apellidos}", String.class));
        htmlPanelGrid.getChildren().add(apellidosValue);
        
        HtmlOutputText nombresLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        nombresLabel.setId("nombresLabel");
        nombresLabel.setValue("Nombres:   ");
        htmlPanelGrid.getChildren().add(nombresLabel);
        
        HtmlOutputText nombresValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        nombresValue.setId("nombresValue");
        nombresValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{cobradorBean.cobrador.nombres}", String.class));
        htmlPanelGrid.getChildren().add(nombresValue);
        
        HtmlOutputText zonaLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        zonaLabel.setId("zonaLabel");
        zonaLabel.setValue("Zona:   ");
        htmlPanelGrid.getChildren().add(zonaLabel);
        
        HtmlOutputText zonaValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        zonaValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{cobradorBean.cobrador.zona}", Zona.class));
        zonaValue.setConverter(new ZonaConverter());
        htmlPanelGrid.getChildren().add(zonaValue);
        
        return htmlPanelGrid;
    }
    
    public List<Zona> CobradorBean.completeZona(String query) {
        List<Zona> suggestions = new ArrayList<Zona>();
        for (Zona zona : Zona.findAllZonas()) {
            String zonaStr = String.valueOf(zona.getZona() +  " "  + zona.getDescripcion());
            if (zonaStr.toLowerCase().startsWith(query.toLowerCase())) {
                suggestions.add(zona);
            }
        }
        return suggestions;
    }
    
    public String CobradorBean.onEdit() {
        return null;
    }
    
    public boolean CobradorBean.isCreateDialogVisible() {
        return createDialogVisible;
    }
    
    public void CobradorBean.setCreateDialogVisible(boolean createDialogVisible) {
        this.createDialogVisible = createDialogVisible;
    }
    
    public String CobradorBean.displayList() {
        createDialogVisible = false;
        findAllCobradors();
        return "cobrador";
    }
    
    public String CobradorBean.displayCreateDialog() {
        cobrador = new Cobrador();
        createDialogVisible = true;
        return "cobrador";
    }
    
    public void CobradorBean.reset() {
        cobrador = null;
        createDialogVisible = false;
    }
    
    public void CobradorBean.handleDialogClose(CloseEvent event) {
        reset();
    }
    
}
