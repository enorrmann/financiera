// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.com.norrmann.financiera.web;

import ar.com.norrmann.financiera.model.Cobrador;
import ar.com.norrmann.financiera.model.Cuota;
import ar.com.norrmann.financiera.model.Pago;
import ar.com.norrmann.financiera.web.PagoBean;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.component.html.HtmlPanelGrid;

privileged aspect PagoBean_Roo_ManagedBean {
    
    declare @type: PagoBean: @ManagedBean(name = "pagoBean");
    
    declare @type: PagoBean: @SessionScoped;
    
    private String PagoBean.name = "Pagoes";
    
    private Pago PagoBean.pago;
    
    private List<Pago> PagoBean.allPagoes;
    
    private boolean PagoBean.dataVisible = false;
    
    private List<String> PagoBean.columns;
    
    private HtmlPanelGrid PagoBean.createPanelGrid;
    
    private HtmlPanelGrid PagoBean.editPanelGrid;
    
    private HtmlPanelGrid PagoBean.viewPanelGrid;
    
    private boolean PagoBean.createDialogVisible = false;
    
    @PostConstruct
    public void PagoBean.init() {
        columns = new ArrayList<String>();
        columns.add("fechaPago");
        columns.add("importe");
    }
    
    public String PagoBean.getName() {
        return name;
    }
    
    public List<String> PagoBean.getColumns() {
        return columns;
    }
    
    public List<Pago> PagoBean.getAllPagoes() {
        return allPagoes;
    }
    
    public void PagoBean.setAllPagoes(List<Pago> allPagoes) {
        this.allPagoes = allPagoes;
    }
    
    public String PagoBean.findAllPagoes() {
        allPagoes = Pago.findAllPagoes();
        dataVisible = !allPagoes.isEmpty();
        return null;
    }
    
    public boolean PagoBean.isDataVisible() {
        return dataVisible;
    }
    
    public void PagoBean.setDataVisible(boolean dataVisible) {
        this.dataVisible = dataVisible;
    }
    
    public HtmlPanelGrid PagoBean.getCreatePanelGrid() {
        if (createPanelGrid == null) {
            createPanelGrid = populateCreatePanel();
        }
        return createPanelGrid;
    }
    
    public void PagoBean.setCreatePanelGrid(HtmlPanelGrid createPanelGrid) {
        this.createPanelGrid = createPanelGrid;
    }
    
    public HtmlPanelGrid PagoBean.getEditPanelGrid() {
        if (editPanelGrid == null) {
            editPanelGrid = populateEditPanel();
        }
        return editPanelGrid;
    }
    
    public void PagoBean.setEditPanelGrid(HtmlPanelGrid editPanelGrid) {
        this.editPanelGrid = editPanelGrid;
    }
    
    public HtmlPanelGrid PagoBean.getViewPanelGrid() {
        return populateViewPanel();
    }
    
    public void PagoBean.setViewPanelGrid(HtmlPanelGrid viewPanelGrid) {
        this.viewPanelGrid = viewPanelGrid;
    }
    
    public Pago PagoBean.getPago() {
        if (pago == null) {
            pago = new Pago();
        }
        return pago;
    }
    
    public void PagoBean.setPago(Pago pago) {
        this.pago = pago;
    }
    
    public List<Cuota> PagoBean.completeCuota(String query) {
        List<Cuota> suggestions = new ArrayList<Cuota>();
        for (Cuota cuota : Cuota.findAllCuotas()) {
            String cuotaStr = String.valueOf(cuota.getFechaVencimiento() +  " "  + cuota.getImporte() +  " "  + cuota.getNumero() +  " "  + cuota.getPagada());
            if (cuotaStr.toLowerCase().startsWith(query.toLowerCase())) {
                suggestions.add(cuota);
            }
        }
        return suggestions;
    }
    
    public List<Cobrador> PagoBean.completeCobrador(String query) {
        List<Cobrador> suggestions = new ArrayList<Cobrador>();
        for (Cobrador cobrador : Cobrador.findAllCobradors()) {
            String cobradorStr = String.valueOf(cobrador.getApellidos() +  " "  + cobrador.getNombres());
            if (cobradorStr.toLowerCase().startsWith(query.toLowerCase())) {
                suggestions.add(cobrador);
            }
        }
        return suggestions;
    }
    
    public String PagoBean.onEdit() {
        return null;
    }
    
    public boolean PagoBean.isCreateDialogVisible() {
        return createDialogVisible;
    }
    
    public void PagoBean.setCreateDialogVisible(boolean createDialogVisible) {
        this.createDialogVisible = createDialogVisible;
    }
    
    public String PagoBean.displayList() {
        createDialogVisible = false;
        findAllPagoes();
        return "pago";
    }
    
    public String PagoBean.displayCreateDialog() {
        pago = new Pago();
        createDialogVisible = true;
        return "pago";
    }
    
    public void PagoBean.reset() {
        pago = null;
        createDialogVisible = false;
    }
    
}
