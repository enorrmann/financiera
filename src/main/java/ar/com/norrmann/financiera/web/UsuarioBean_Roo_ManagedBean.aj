// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ar.com.norrmann.financiera.web;

import ar.com.norrmann.financiera.model.Usuario;
import ar.com.norrmann.financiera.web.UsuarioBean;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.component.html.HtmlPanelGrid;
import org.primefaces.event.CloseEvent;

privileged aspect UsuarioBean_Roo_ManagedBean {
    
    declare @type: UsuarioBean: @ManagedBean(name = "usuarioBean");
    
    declare @type: UsuarioBean: @SessionScoped;
    
    private String UsuarioBean.name = "Usuarios";
    
    private Usuario UsuarioBean.usuario;
    
    private List<Usuario> UsuarioBean.allUsuarios;
    
    private boolean UsuarioBean.dataVisible = false;
    
    private List<String> UsuarioBean.columns;
    
    private HtmlPanelGrid UsuarioBean.createPanelGrid;
    
    private HtmlPanelGrid UsuarioBean.editPanelGrid;
    
    private HtmlPanelGrid UsuarioBean.viewPanelGrid;
    
    private boolean UsuarioBean.createDialogVisible = false;
    
    @PostConstruct
    public void UsuarioBean.init() {
        columns = new ArrayList<String>();
        columns.add("apellido");
        columns.add("nombre");
        columns.add("nombreUsuario");
        columns.add("password");
        columns.add("rol");
    }
    
    public String UsuarioBean.getName() {
        return name;
    }
    
    public List<String> UsuarioBean.getColumns() {
        return columns;
    }
    
    public List<Usuario> UsuarioBean.getAllUsuarios() {
        return allUsuarios;
    }
    
    public void UsuarioBean.setAllUsuarios(List<Usuario> allUsuarios) {
        this.allUsuarios = allUsuarios;
    }
    
    public String UsuarioBean.findAllUsuarios() {
        allUsuarios = Usuario.findAllUsuarios();
        dataVisible = !allUsuarios.isEmpty();
        return null;
    }
    
    public boolean UsuarioBean.isDataVisible() {
        return dataVisible;
    }
    
    public void UsuarioBean.setDataVisible(boolean dataVisible) {
        this.dataVisible = dataVisible;
    }
    
    public HtmlPanelGrid UsuarioBean.getCreatePanelGrid() {
        if (createPanelGrid == null) {
            createPanelGrid = populateCreatePanel();
        }
        return createPanelGrid;
    }
    
    public void UsuarioBean.setCreatePanelGrid(HtmlPanelGrid createPanelGrid) {
        this.createPanelGrid = createPanelGrid;
    }
    
    public HtmlPanelGrid UsuarioBean.getEditPanelGrid() {
        if (editPanelGrid == null) {
            editPanelGrid = populateEditPanel();
        }
        return editPanelGrid;
    }
    
    public void UsuarioBean.setEditPanelGrid(HtmlPanelGrid editPanelGrid) {
        this.editPanelGrid = editPanelGrid;
    }
    
    public HtmlPanelGrid UsuarioBean.getViewPanelGrid() {
        return populateViewPanel();
    }
    
    public void UsuarioBean.setViewPanelGrid(HtmlPanelGrid viewPanelGrid) {
        this.viewPanelGrid = viewPanelGrid;
    }
    
    public Usuario UsuarioBean.getUsuario() {
        if (usuario == null) {
            usuario = new Usuario();
        }
        return usuario;
    }
    
    public void UsuarioBean.setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }
    
    public String UsuarioBean.onEdit() {
        return null;
    }
    
    public boolean UsuarioBean.isCreateDialogVisible() {
        return createDialogVisible;
    }
    
    public void UsuarioBean.setCreateDialogVisible(boolean createDialogVisible) {
        this.createDialogVisible = createDialogVisible;
    }
    
    public void UsuarioBean.reset() {
        usuario = null;
        createDialogVisible = false;
    }
    
    public void UsuarioBean.handleDialogClose(CloseEvent event) {
        reset();
    }
    
}
